coupon_redemptions
view(coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date)))
view(coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, names=TRUE)))
view(coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, name=TRUE)))
view(coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, lavel=TRUE)))
view(coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, label=TRUE)))
coupon_redemptions <- cou
coupon_redemptions <- coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date))
view(coupon_redemptions)
coupon_redemptions %>% inner_join(demographics, by="household_id")
coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
sample <-coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
unique(sample$redemption_date)
ggplot(sample, aes(x=dayOfWeek, colour = household_size)) + geom_plot()
ggplot(sample, aes(x=dayOfWeek, colour = household_size)) + geom_bar()
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) + geom_bar()
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) +
geom_bar() +
scale_x_continuous(breaks=seq(1,7,by=1))
# Redemption date --------------------------------------------------------
coupon_redemptions <- coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, label=TRUE))
sample <-coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) +
geom_bar() +
scale_x_continuous(breaks=seq(1,7,by=1))
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) +
geom_bar()
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) +
geom_line()
ggplot(sample, aes(y=dayOfWeek, fill = household_size)) +
geom_line()
ggplot(sample, aes(x=dayOfWeek, fill = household_size)) +
geom_line()
sample <- sample %>% group_by(dayOfWeek, household_size) %>% count()
ggplot(sample, aes(x=dayOfWeek, y =n, fill = household_size)) +
geom_line()
sample
sample <-coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
sample <- sample %>% group_by(dayOfWeek) %>% count()
sample
ggplot(sample, aes(x=dayOfWeek, y=n)) +
geom_line()
ggplot(sample, aes(x=household_size, y=n, fill = dayOfWeek)) +
geom_line()
coupon_redemptions <- coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, label=TRUE))
sample <-coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
sample <- sample %>% group_by(dayOfWeek, household_size) %>% count()
ggplot(sample, aes(x=household_size, y=n, fill = dayOfWeek)) +
geom_line()
sample
sample <-coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
select(household_id, dayOfWeek, household_size, redemption_date)
sample
coupon_redemptions %>% inner_join(demographics, by="household_id")
coupon_redemptions
transactions <- transactions %>% mutate(date = as.Date(ymd_hms(transaction_timestamp)))
transa
transactions
coupon_redemptions
c(promotions, transactions) %<-% get_data(which = 'both', verbose = FALSE)
transactions <- transactions %>% mutate(redemption_date = as.Date(ymd_hms(transaction_timestamp)))
sample <- coupon_redemptions %>% inner_join(demographics, by="household_id") %>%
inner_join(transactions, by=c('household_id','redemption_date'))
coupon_redemptions %>% inner_join(demographics, by="household_id")
sample <- coupon_redemptions %>% inner_join(demographics, by="household_id") %>% select(household_id, campaign_id, redemption_date, household_size, age, income)
sample
sample %>% inner_join(transactions, by=c('household_id','redemption_date'))
view(sample)
unique(sample$redemption_date)
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(week=wday(redemption_date))
sample
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(dayOfWeek=wday(redemption_date))
totalSalesDistribution
sample %>% group_by(campaign_id) %>% count()
sample %>% group_by(dayOfWeek, campaign_id) %>% count()
sample %>% group_by(dayOfWeek) %>% count()
sample %>% group_by(dayOfWeek, household_size) %>% count()
sample2 <- sample %>% group_by(dayOfWeek, household_size) %>% count()
ts(sample2, start=1, frequency = 7)
sample12
sample2
ts(sample2$n, start=1, frequency = 7)
view(sample2)
sample2.ts <- ts(sample2$n, start=1, frequency = 7)
ggseasonplot(sample2.ts)
library(tseries)
ggseasonplot(sample2.ts)
library(forecast)
ggseasonplot(sample2.ts)
sample2.ts <- ts(sample2$n, start=1, frequency = 7)
sample2 %>% group_by(dayOfWeek, household_size) %>% summarise(total=sum(n))
sample2 %>% pivot_wider(names_from = household_size, values_from = n, values_fill = list(n = 0))
wide_data <- sample2 %>% pivot_wider(names_from = household_size, values_from = n, values_fill = list(n = 0))
ts.wide <- ts(wide_data[-1], frequency = 7, start=c(1,1))
ts.wide
ggseasonplot(ts.wide)
wide_data[-1]
aggregated_data <- sample2 %>%
group_by(dayOfWeek, household_size) %>%
summarise(total_n = sum(n), .groups = "drop")
# Create a time series object for each household size
# Convert data into a wide format
wide_data <- aggregated_data %>%
pivot_wider(names_from = household_size, values_from = total_n, values_fill = list(total_n = 0))
# View the wide format dataset
print(wide_data)
# Create a time series object
time_series_data <- ts(wide_data[-1], frequency = 7, start = c(1, 1)) # Starting from week 1
time_series_data
ggseasonplot(time_series_data) +
labs(title = "Seasonal Plot of Household Size by Day of Week",
x = "Day of the Week",
y = "Number of Households",
color = "Household Size") +
scale_color_manual(values = c("blue", "green", "red", "orange", "purple"))  # Customize colors as needed
sample2
ggplot(sample2, aes=(x=dayOfWeek, y=n)) +
ggplot(sample2, aes=(x=dayOfWeek y=n)) +
ggplot(sample2, aes=(x=dayOfWeek)) +
geom_line()
ggplot(sample2, aes=(x=n)) +
geom_line()
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n))
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = householde_size))
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size))
custom_colors <- c('1'='red','2'='blue','3'='green','4'='purple','5+'='darkgreen')
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_color_manual(values=custom_colors)
custom_colors <- c('1'='red','2'='blue','3'='orange','4'='purple','5+'='darkgreen')
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_color_manual(values=custom_colors)
sample
sample2
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(dayOfWeek=wday(redemption_date, label=TRUE))
sample2 <- sample %>% group_by(dayOfWeek, household_size) %>% count()
custom_colors <- c('1'='red','2'='blue','3'='orange','4'='purple','5+'='darkgreen')
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(dayOfWeek=wday(redemption_date, label=TRUE))
sample2 <- sample %>% group_by(dayOfWeek, household_size) %>% count()
custom_colors <- c('1'='red','2'='blue','3'='orange','4'='purple','5+'='darkgreen')
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
sample2
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(dayOfWeek=wday(redemption_date))
sample2 <- sample %>% group_by(dayOfWeek, household_size) %>% count()
custom_colors <- c('1'='red','2'='blue','3'='orange','4'='purple','5+'='darkgreen')
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_discrete(labels = c('1'='Sunday','2'='Monday','3'='Tuesday','4'='Wednesday','5'='Thursday','6'='Friday','7'='Saturday'))
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_discrete(labels = c('1'='Sunday','2'='Monday','3'='Tuesday','4'='Wednesday','5'='Thursday','6'='Friday','7'='Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_discrete(labels = c('1'='Sunday','2'='Monday','3'='Tuesday','4'='Wednesday','5'='Thursday','6'='Friday','7'='Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size")
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemtions',
color="Household Size")
ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemtions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemtions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
# Setup -------------------------------------------------------------------
library(tidyverse)
library(completejourney)
c(promotions, transactions) %<-% get_data(which = 'both', verbose = FALSE)
view(coupon_redemptions)
view(coupons)
view(coupons)
view(transactions)
view(demographics)
view(campaign_descriptions)
view(campaigns)
view(products)
# Redemptions vs. Household Size --------------------------------------------------------
coupon_redemptions <- coupon_redemptions %>% mutate(dayOfWeek = wday(redemption_date, label=TRUE))
sample <- coupon_redemptions %>%
inner_join(demographics, by="household_id") %>%
select(household_id, campaign_id, redemption_date, household_size, age, income) %>%
mutate(dayOfWeek=wday(redemption_date))
sample2 <- sample %>% group_by(dayOfWeek, household_size) %>% count()
custom_colors <- c('1'='red','2'='blue','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, colour = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize
?annotate
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = household_size), size = 1.5) +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = household_size), linewidth = 1.5) +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = household_size), linewidth = 3) +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = household_size), linewidth = 3, linetype='dashed') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = household_size), linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == 2), aes(x=dayOfWeek, y=n, colour = household_size), linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != 2), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == 2), aes(x=dayOfWeek, y=n, colour = 'red'), linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != 2), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
#custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == 2), aes(x=dayOfWeek, y=n, colour = 'red'), linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != 2), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = 'red'), linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n), colour = 'red', linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n), colour = 'red', linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n), colour = 'red', linewidth = 3, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize
ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n), colour = 'red', linewidth = 2, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n), colour = 'red', linewidth = 1.5, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize
custom_colors <- c('1'='blue','2'='red','3'='orange','4'='purple','5+'='darkgreen')
redemption_householdSize <- ggplot(sample2) +
geom_line(data = subset(sample2, household_size == '2'), aes(x=dayOfWeek, y=n, colour = '2'), linewidth = 1.5, linetype='dotted') +
geom_line(data = subset(sample2, household_size != '2'), aes(x=dayOfWeek, y=n, color = household_size)) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7), labels = c('Sunday','Monday', 'Tuesday','Wednesday','Thursday','Friday','Saturday')) +
scale_color_manual(values=custom_colors) +
labs(title = "Distribution of Redemptions Over Weeks based off Household Size",
x = 'Day of Week',
y = 'Count of Redemptions',
color="Household Size") +
theme_minimal()
redemption_householdSize
# Product Placement vs. Direct Marketing -------------------------------------------------
sample1 <- promotions %>% select(product_id, display_location, mailer_location, week) %>%
right_join(coupons, by='product_id', relationship = 'many-to-many')
# Product Placement vs. Direct Marketing -------------------------------------------------
sample1 <- promotions %>% select(product_id, display_location, mailer_location, week) %>%
right_join(coupons, by='product_id', relationship = 'many-to-many')
# Setup -------------------------------------------------------------------
library(tidyverse)
library(completejourney)
c(promotions, transactions) %<-% get_data(which = 'both', verbose = FALSE)
view(coupon_redemptions)
view(coupons)
view(transactions)
view(demographics)
view(campaign_descriptions)
view(campaigns)
view(products)
# Product Placement vs. Direct Marketing -------------------------------------------------
sample1 <- promotions %>% select(product_id, display_location, mailer_location, week) %>%
right_join(coupons, by='product_id', relationship = 'many-to-many')
sample1
sample2 <- sample1 %>% inner_join(coupon_redemptions, by='campaign_id')
sum(is.na(sample1))
colSums(is.na(sample1))
# Product Placement vs. Direct Marketing -------------------------------------------------
sample1 <- promotions %>% select(product_id, display_location, mailer_location, week) %>%
right_join(coupons, by='product_id', relationship = 'many-to-many') %>%
drop_na(subset(display_location))
# Product Placement vs. Direct Marketing -------------------------------------------------
sample1 <- promotions %>% select(product_id, display_location, mailer_location, week) %>%
right_join(coupons, by='product_id', relationship = 'many-to-many') %>%
drop_na(display_location)
sample1
colSums(is.na(sample1))
sample2 <- sample1 %>% inner_join(coupon_redemptions, by='campaign_id') %>% drop_na(display_location)
sample1 %>% group_by(product_id, display_location, campaign_id) %>% summarise(count_coupon = count(coupon_upc))
sample1 %>% group_by(product_id, display_location, campaign_id) %>% summarise(count_coupon = n())
sample1 %>% group_by(product_id, display_location, campaign_id) %>% summarise(count_coupon = n()) %>% arrange(desc(count_coupon))
sample2 <- sample1 %>% group_by(product_id, display_location, campaign_id) %>% summarise(count_coupon = n()) %>% arrange(desc(count_coupon))
sample2 <- sample1 %>% group_by(product_id, display_location, campaign_id) %>%
summarise(count_coupon = n(), .groups='drop') %>%
arrange(desc(count_coupon)) %>%
sample2 <- sample1 %>% group_by(product_id, display_location, campaign_id) %>%
summarise(count_coupon = n(), .groups='drop') %>%
arrange(desc(count_coupon))
sample2
sample2 %>% inner_join(coupon_redemptions,by='campaign_id')
sample2 %>% inner_join(coupon_redemptions,by='campaign_id', relationship = 'many-to-many')
sample3 <- sample2 %>% inner_join(coupon_redemptions,by='campaign_id', relationship = 'many-to-many')
colSums(is.na(sample3))
sample3 <- sample2 %>% inner_join(coupon_redemptions,by='campaign_id', relationship = 'many-to-many') %>%
group_by(product_id, display_location, campaign_id) %>%
summarise(count_redemptions = n())
sample3
# Setup -------------------------------------------------------------------
library(tidyverse)
library(here)
install.packages(here)
c(promotions, transactions) %<-% get_data()
c(promotions, transactions) %<-% get_data(which = 'both', verbose = FALSE)
unique(products$department)
